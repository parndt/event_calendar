<%
  # make the height calculations
  # tricky since multiple events in a day could force an increase in the set height
  height = options[:day_names_height]

  row_heights = cal_row_heights(options)
  row_heights.each do |row_height|
    height += row_height
  end

  # the first and last days of this calendar month
  first = Date.civil(options[:year], options[:month], 1)
  last = Date.civil(options[:year], options[:month], -1)
%>
<div class='ec-calendar' <%= "style='width: #{options[:width]}px;'" if options[:width] %>>
  <table class='ec-calendar-header' cellpadding="0" cellspacing="0">
    <thead>
      <tr>
        <% if options[:previous_month_text] or options[:next_month_text] %>
          <th colspan="2"><%= options[:previous_month_text] %></th>
          <% colspan=3
        else
          colspan=7
        end
        %>
        <th colspan="<%= colspan %>" class="ec-month-name"><%= options[:month_name_text] %></th>
        <%= "<th colspan='2' class='ec-month-nav'>#{options[:next_month_text]}</th>" if options[:next_month_text] -%>
      </tr>
    </thead>
  </table>

  <div class='eb-body' style='height: <%= height %>px;'>
    <table class='ec-day-names' style="height: <%= options[:day_names_height] %>px;" cellpadding="0" cellspacing="0">
      <tbody>
        <tr>
          <% @day_names.each do |day_name| -%>
            <th class="ec-day-name" title="<%= day_name %>"><%= day_name.mb_chars[options[:abbrev]] %></th>
          <% end -%>
        </tr>
      </tbody>
    </table>

    <div class="ec-rows" style="top: <%= options[:day_names_height] %>px; height: <%= height - options[:day_names_height] %>px;">
      <%
        first_day_of_week = beginning_of_week(first, options[:first_day_of_week])
        last_day_of_week = end_of_week(first, options[:first_day_of_week])
        last_day_of_cal = end_of_week(last, options[:first_day_of_week])
        row_num = 0
        top = 0

        while(last_day_of_week <= last_day_of_cal) %>
          <div class='ec-row' style='top: <%= top %>px; height: <%= row_heights[row_num] %>px;'>
            <% top += row_heights[row_num] -%>
            <table class="ec-row-bg" cellpadding="0" cellspacing="0">
              <tbody>
                <tr>
                  <% first_day_of_week.upto(first_day_of_week+6) do |day| %>
                    <td class='ec-day-bg<%= " ec-today-bg" if (day == Date.today) %>'>&nbsp;</td>
                  <% end %>
                </tr>
              </tbody>
            </table>
            <table class="ec-row-table" cellpadding="0" cellspacing="0">
              <tbody>
                <tr>
                  <%
                    first_day_of_week.upto(last_day_of_week) do |day|
                      css = []
                      css << "ec-today-header" if options[:show_today] and (day == Date.today)
                      css << "ec-other-month-header" if (day < first) || (day > last)
                      css << "ec-weekend-day-header" if weekend?(day)
                  %>
                    <td class='ec-day-header<%= " #{css.join(" ")}" unless css.empty? %>' style='height: <%= options[:day_nums_height] %>px;'>
                      <%= options[:link_to_day_action] ? day_link(day.day, day, options[:link_to_day_action]) : day.day %>
                    </td>
                  <% end %>
                </tr>

              <% options[:event_strips].each do |strip| %>
                <tr>
            <%
              # go through through the strip, for the entries that correspond to the days of this week
              strip[row_num*7, 7].each_with_index do |event, index|
                day = first_day_of_week + index

                if event
                  # get the dates of this event that fit into this week
                  dates = event.clip_range(first_day_of_week, last_day_of_week)
                  # if the event (after it has been clipped) starts on this date,
                  # then create a new cell that spans the number of days
                  if dates[0] == day.to_date %>

                    <td class='ec-event-cell' colspan='<%= (dates[1]-dates[0]).to_i + 1 %>' style='padding-top: <%= options[:event_margin] %>px'>
                      <div class='ec-event event_<%= event.id %>' style='background-color: <%= event.color %>;padding-top: <%= options[:event_padding_top] %>px; height: <%= options[:event_height] - options[:event_padding_top] %>px; '<%= " event_id='#{event.id}' color='#{event.color}' onmouseover='select_event(this, true);' onmouseout='select_event(this, false);'" if options[:use_javascript] %>>
                        <%= "<div class='ec-left-arrow'></div>" if event.start_at.to_date < dates[0] %>
                        <%= "<div class='ec-right-arrow'></div>" if event.end_at.to_date > dates[1] %>
                        <%= block.call(event) # additional html supplied to helper
                        %>
                      </div>
                    </td>
                  <%
                  end
                else # there wasn't an event so create an empty cell and container
                  %>
                    <td class='ec-event-cell ec-no-event-cell' style='padding-top: <%= options[:event_margin] %>px;'>
                      <div class='ec-event' style='padding-top: <%= options[:event_padding_top] %>px;height: <%= options[:event_height] - options[:event_padding_top] %>;'>
                        &nbsp;
                      </div>
                    </td>
                <% end %>
                <% end %>
                </tr>
              <% end %>
              </tbody>
            </table>
          </div>
        <%
          row_num += 1
          first_day_of_week += 7
          last_day_of_week += 7
        %>
      <% end %>
    </div>
  </div>
</div>